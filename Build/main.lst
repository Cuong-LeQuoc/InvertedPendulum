ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB299:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "FreeRTOS.h"
  25:Core/Src/main.c **** #include "task.h"
  26:Core/Src/main.c **** #include "arm_math.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** #include "printf.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  52:Core/Src/main.c **** TIM_HandleTypeDef htim6;
  53:Core/Src/main.c **** TIM_HandleTypeDef htim7;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart2;
  56:Core/Src/main.c **** UART_HandleTypeDef huart3;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** float32_t testSin = 0;
  60:Core/Src/main.c **** char buffer[20];
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** static void MX_GPIO_Init(void);
  67:Core/Src/main.c **** static void MX_TIM2_Init(void);
  68:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  69:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  70:Core/Src/main.c **** static void MX_TIM6_Init(void);
  71:Core/Src/main.c **** static void MX_TIM7_Init(void);
  72:Core/Src/main.c **** static void MX_TIM3_Init(void);
  73:Core/Src/main.c **** static void MX_ADC1_Init(void);
  74:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  75:Core/Src/main.c **** void SendBuffer(UART_HandleTypeDef *huart, char* buffer) {
  76:Core/Src/main.c ****   uint64_t length = strlen(buffer);
  77:Core/Src/main.c ****   HAL_UART_Transmit_IT(huart, (uint8_t*) buffer, length);
  78:Core/Src/main.c **** }
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** void mainTask(void * pvParameters) {
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   for(;;) {
  86:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     sprintf(buffer, "Test code: %0.4f\n", 1.0);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 3


  89:Core/Src/main.c ****     SendBuffer(&huart3, buffer);
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****     vTaskDelay(pdMS_TO_TICKS(1000));
  92:Core/Src/main.c ****   }
  93:Core/Src/main.c **** }
  94:Core/Src/main.c **** /* USER CODE END 0 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /**
  97:Core/Src/main.c ****   * @brief  The application entry point.
  98:Core/Src/main.c ****   * @retval int
  99:Core/Src/main.c ****   */
 100:Core/Src/main.c **** int main(void)
 101:Core/Src/main.c **** {
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 1 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Core/Src/main.c ****   HAL_Init();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Configure the system clock */
 117:Core/Src/main.c ****   SystemClock_Config();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Initialize all configured peripherals */
 124:Core/Src/main.c ****   MX_GPIO_Init();
 125:Core/Src/main.c ****   MX_TIM2_Init();
 126:Core/Src/main.c ****   MX_USART2_UART_Init();
 127:Core/Src/main.c ****   MX_USART3_UART_Init();
 128:Core/Src/main.c ****   MX_TIM6_Init();
 129:Core/Src/main.c ****   MX_TIM7_Init();
 130:Core/Src/main.c ****   MX_TIM3_Init();
 131:Core/Src/main.c ****   MX_ADC1_Init();
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   testSin = arm_sin_f32(PI/2);
 135:Core/Src/main.c ****   
 136:Core/Src/main.c ****   xTaskCreate(mainTask, NULL, 130, NULL, 1, NULL);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   vTaskStartScheduler();
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END 2 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Infinite loop */
 143:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 144:Core/Src/main.c ****   while (1)
 145:Core/Src/main.c ****   {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 4


 146:Core/Src/main.c ****     
 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief System Clock Configuration
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** void SystemClock_Config(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 166:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 169:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 202:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 5


 203:Core/Src/main.c ****   * @retval None
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c **** static void MX_ADC1_Init(void)
 206:Core/Src/main.c **** {
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   hadc1.Instance = ADC1;
 221:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 222:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 223:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 224:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 225:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 226:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 227:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 228:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 229:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 230:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 231:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 232:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 240:Core/Src/main.c ****   sConfig.Rank = 1;
 241:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 242:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 254:Core/Src/main.c ****   * @param None
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** static void MX_TIM2_Init(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 265:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 270:Core/Src/main.c ****   htim2.Instance = TIM2;
 271:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 272:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 273:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 274:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 275:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 276:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 277:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 278:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 279:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 280:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 281:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 282:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 283:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 284:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 285:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 290:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 291:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 303:Core/Src/main.c ****   * @param None
 304:Core/Src/main.c ****   * @retval None
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c **** static void MX_TIM3_Init(void)
 307:Core/Src/main.c **** {
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 314:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 319:Core/Src/main.c ****   htim3.Instance = TIM3;
 320:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 321:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 322:Core/Src/main.c ****   htim3.Init.Period = 65535;
 323:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 324:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 325:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 326:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 327:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 328:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 329:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 330:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 331:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 332:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 333:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 334:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 339:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 340:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief TIM6 Initialization Function
 352:Core/Src/main.c ****   * @param None
 353:Core/Src/main.c ****   * @retval None
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c **** static void MX_TIM6_Init(void)
 356:Core/Src/main.c **** {
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END TIM6_Init 0 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 1 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE END TIM6_Init 1 */
 367:Core/Src/main.c ****   htim6.Instance = TIM6;
 368:Core/Src/main.c ****   htim6.Init.Prescaler = 839;
 369:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 370:Core/Src/main.c ****   htim6.Init.Period = 999;
 371:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 372:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 373:Core/Src/main.c ****   {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 8


 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 377:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 378:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     Error_Handler();
 381:Core/Src/main.c ****   }
 382:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 2 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE END TIM6_Init 2 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** }
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** /**
 389:Core/Src/main.c ****   * @brief TIM7 Initialization Function
 390:Core/Src/main.c ****   * @param None
 391:Core/Src/main.c ****   * @retval None
 392:Core/Src/main.c ****   */
 393:Core/Src/main.c **** static void MX_TIM7_Init(void)
 394:Core/Src/main.c **** {
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END TIM7_Init 0 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 1 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END TIM7_Init 1 */
 405:Core/Src/main.c ****   htim7.Instance = TIM7;
 406:Core/Src/main.c ****   htim7.Init.Prescaler = 83;
 407:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 408:Core/Src/main.c ****   htim7.Init.Period = 999;
 409:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 410:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     Error_Handler();
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 415:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 416:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****     Error_Handler();
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* USER CODE END TIM7_Init 2 */
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** }
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** /**
 427:Core/Src/main.c ****   * @brief USART2 Initialization Function
 428:Core/Src/main.c ****   * @param None
 429:Core/Src/main.c ****   * @retval None
 430:Core/Src/main.c ****   */
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 9


 431:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 432:Core/Src/main.c **** {
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 441:Core/Src/main.c ****   huart2.Instance = USART2;
 442:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 443:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 444:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 445:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 446:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 447:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 448:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 449:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** }
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** /**
 460:Core/Src/main.c ****   * @brief USART3 Initialization Function
 461:Core/Src/main.c ****   * @param None
 462:Core/Src/main.c ****   * @retval None
 463:Core/Src/main.c ****   */
 464:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 465:Core/Src/main.c **** {
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 474:Core/Src/main.c ****   huart3.Instance = USART3;
 475:Core/Src/main.c ****   huart3.Init.BaudRate = 576000;
 476:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 477:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 478:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 479:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 480:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 481:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 482:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 483:Core/Src/main.c ****   {
 484:Core/Src/main.c ****     Error_Handler();
 485:Core/Src/main.c ****   }
 486:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 487:Core/Src/main.c **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 10


 488:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** }
 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** /**
 493:Core/Src/main.c ****   * @brief GPIO Initialization Function
 494:Core/Src/main.c ****   * @param None
 495:Core/Src/main.c ****   * @retval None
 496:Core/Src/main.c ****   */
 497:Core/Src/main.c **** static void MX_GPIO_Init(void)
 498:Core/Src/main.c **** {
  28              		.loc 1 498 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 8AB0     		sub	sp, sp, #40
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 499:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 499 3 view .LVU1
  43              		.loc 1 499 20 is_stmt 0 view .LVU2
  44 0004 05AD     		add	r5, sp, #20
  45 0006 0024     		movs	r4, #0
  46 0008 0594     		str	r4, [sp, #20]
  47 000a 0694     		str	r4, [sp, #24]
  48 000c 0794     		str	r4, [sp, #28]
  49 000e 0894     		str	r4, [sp, #32]
  50 0010 0994     		str	r4, [sp, #36]
 500:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 501:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 504:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 504 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 504 3 view .LVU4
  54 0012 0194     		str	r4, [sp, #4]
  55              		.loc 1 504 3 view .LVU5
  56 0014 1D4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F08002 		orr	r2, r2, #128
  59 001c 1A63     		str	r2, [r3, #48]
  60              		.loc 1 504 3 view .LVU6
  61 001e 1A6B     		ldr	r2, [r3, #48]
  62 0020 02F08002 		and	r2, r2, #128
  63 0024 0192     		str	r2, [sp, #4]
  64              		.loc 1 504 3 view .LVU7
  65 0026 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 504 3 view .LVU8
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 11


 505:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 505 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 505 3 view .LVU10
  71 0028 0294     		str	r4, [sp, #8]
  72              		.loc 1 505 3 view .LVU11
  73 002a 1A6B     		ldr	r2, [r3, #48]
  74 002c 42F00102 		orr	r2, r2, #1
  75 0030 1A63     		str	r2, [r3, #48]
  76              		.loc 1 505 3 view .LVU12
  77 0032 1A6B     		ldr	r2, [r3, #48]
  78 0034 02F00102 		and	r2, r2, #1
  79 0038 0292     		str	r2, [sp, #8]
  80              		.loc 1 505 3 view .LVU13
  81 003a 029A     		ldr	r2, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 505 3 view .LVU14
 506:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 506 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 506 3 view .LVU16
  87 003c 0394     		str	r4, [sp, #12]
  88              		.loc 1 506 3 view .LVU17
  89 003e 1A6B     		ldr	r2, [r3, #48]
  90 0040 42F00202 		orr	r2, r2, #2
  91 0044 1A63     		str	r2, [r3, #48]
  92              		.loc 1 506 3 view .LVU18
  93 0046 1A6B     		ldr	r2, [r3, #48]
  94 0048 02F00202 		and	r2, r2, #2
  95 004c 0392     		str	r2, [sp, #12]
  96              		.loc 1 506 3 view .LVU19
  97 004e 039A     		ldr	r2, [sp, #12]
  98              	.LBE6:
  99              		.loc 1 506 3 view .LVU20
 507:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 100              		.loc 1 507 3 view .LVU21
 101              	.LBB7:
 102              		.loc 1 507 3 view .LVU22
 103 0050 0494     		str	r4, [sp, #16]
 104              		.loc 1 507 3 view .LVU23
 105 0052 1A6B     		ldr	r2, [r3, #48]
 106 0054 42F00802 		orr	r2, r2, #8
 107 0058 1A63     		str	r2, [r3, #48]
 108              		.loc 1 507 3 view .LVU24
 109 005a 1B6B     		ldr	r3, [r3, #48]
 110 005c 03F00803 		and	r3, r3, #8
 111 0060 0493     		str	r3, [sp, #16]
 112              		.loc 1 507 3 view .LVU25
 113 0062 049B     		ldr	r3, [sp, #16]
 114              	.LBE7:
 115              		.loc 1 507 3 view .LVU26
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 510:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 116              		.loc 1 510 3 view .LVU27
 117 0064 0A4E     		ldr	r6, .L3+4
 118 0066 2246     		mov	r2, r4
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 12


 119 0068 4FF47041 		mov	r1, #61440
 120 006c 3046     		mov	r0, r6
 121 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL0:
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /*Configure GPIO pins : PD12 PD13 PD14 PD15 */
 513:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 123              		.loc 1 513 3 view .LVU28
 124              		.loc 1 513 23 is_stmt 0 view .LVU29
 125 0072 4FF47043 		mov	r3, #61440
 126 0076 0593     		str	r3, [sp, #20]
 514:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 127              		.loc 1 514 3 is_stmt 1 view .LVU30
 128              		.loc 1 514 24 is_stmt 0 view .LVU31
 129 0078 0123     		movs	r3, #1
 130 007a 0693     		str	r3, [sp, #24]
 515:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 515 3 is_stmt 1 view .LVU32
 132              		.loc 1 515 24 is_stmt 0 view .LVU33
 133 007c 0794     		str	r4, [sp, #28]
 516:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 134              		.loc 1 516 3 is_stmt 1 view .LVU34
 135              		.loc 1 516 25 is_stmt 0 view .LVU35
 136 007e 0894     		str	r4, [sp, #32]
 517:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 137              		.loc 1 517 3 is_stmt 1 view .LVU36
 138 0080 2946     		mov	r1, r5
 139 0082 3046     		mov	r0, r6
 140 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL1:
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 520:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 521:Core/Src/main.c **** }
 142              		.loc 1 521 1 is_stmt 0 view .LVU37
 143 0088 0AB0     		add	sp, sp, #40
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 16
 146              		@ sp needed
 147 008a 70BD     		pop	{r4, r5, r6, pc}
 148              	.L4:
 149              		.align	2
 150              	.L3:
 151 008c 00380240 		.word	1073887232
 152 0090 000C0240 		.word	1073875968
 153              		.cfi_endproc
 154              	.LFE299:
 156              		.section	.text.SendBuffer,"ax",%progbits
 157              		.align	1
 158              		.global	SendBuffer
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 163              	SendBuffer:
 164              	.LVL2:
 165              	.LFB288:
  75:Core/Src/main.c ****   uint64_t length = strlen(buffer);
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 13


 166              		.loc 1 75 58 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Core/Src/main.c ****   uint64_t length = strlen(buffer);
 170              		.loc 1 75 58 is_stmt 0 view .LVU39
 171 0000 38B5     		push	{r3, r4, r5, lr}
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 16
 174              		.cfi_offset 3, -16
 175              		.cfi_offset 4, -12
 176              		.cfi_offset 5, -8
 177              		.cfi_offset 14, -4
 178 0002 0546     		mov	r5, r0
 179 0004 0C46     		mov	r4, r1
  76:Core/Src/main.c ****   HAL_UART_Transmit_IT(huart, (uint8_t*) buffer, length);
 180              		.loc 1 76 3 is_stmt 1 view .LVU40
  76:Core/Src/main.c ****   HAL_UART_Transmit_IT(huart, (uint8_t*) buffer, length);
 181              		.loc 1 76 21 is_stmt 0 view .LVU41
 182 0006 0846     		mov	r0, r1
 183              	.LVL3:
  76:Core/Src/main.c ****   HAL_UART_Transmit_IT(huart, (uint8_t*) buffer, length);
 184              		.loc 1 76 21 view .LVU42
 185 0008 FFF7FEFF 		bl	strlen
 186              	.LVL4:
  77:Core/Src/main.c **** }
 187              		.loc 1 77 3 is_stmt 1 view .LVU43
 188 000c 82B2     		uxth	r2, r0
 189 000e 2146     		mov	r1, r4
 190 0010 2846     		mov	r0, r5
 191              	.LVL5:
  77:Core/Src/main.c **** }
 192              		.loc 1 77 3 is_stmt 0 view .LVU44
 193 0012 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 194              	.LVL6:
  78:Core/Src/main.c **** /* USER CODE END PFP */
 195              		.loc 1 78 1 view .LVU45
 196 0016 38BD     		pop	{r3, r4, r5, pc}
  78:Core/Src/main.c **** /* USER CODE END PFP */
 197              		.loc 1 78 1 view .LVU46
 198              		.cfi_endproc
 199              	.LFE288:
 201              		.section	.rodata.mainTask.str1.4,"aMS",%progbits,1
 202              		.align	2
 203              	.LC0:
 204 0000 54657374 		.ascii	"Test code: %0.4f\012\000"
 204      20636F64 
 204      653A2025 
 204      302E3466 
 204      0A00
 205              		.section	.text.mainTask,"ax",%progbits
 206              		.align	1
 207              		.global	mainTask
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	mainTask:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 14


 213              	.LFB289:
  83:Core/Src/main.c **** 
 214              		.loc 1 83 36 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ Volatile: function does not return.
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL7:
  83:Core/Src/main.c **** 
 220              		.loc 1 83 36 is_stmt 0 view .LVU48
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 226              	.LVL8:
 227              	.L8:
  85:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 228              		.loc 1 85 3 is_stmt 1 view .LVU49
  86:Core/Src/main.c **** 
 229              		.loc 1 86 5 view .LVU50
 230 0002 4FF48051 		mov	r1, #4096
 231 0006 0948     		ldr	r0, .L10
 232 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 233              	.LVL9:
  88:Core/Src/main.c ****     SendBuffer(&huart3, buffer);
 234              		.loc 1 88 5 view .LVU51
 235 000c 084C     		ldr	r4, .L10+4
 236 000e 0022     		movs	r2, #0
 237 0010 084B     		ldr	r3, .L10+8
 238 0012 0949     		ldr	r1, .L10+12
 239 0014 2046     		mov	r0, r4
 240 0016 FFF7FEFF 		bl	sprintf_
 241              	.LVL10:
  89:Core/Src/main.c **** 
 242              		.loc 1 89 5 view .LVU52
 243 001a 2146     		mov	r1, r4
 244 001c 0748     		ldr	r0, .L10+16
 245 001e FFF7FEFF 		bl	SendBuffer
 246              	.LVL11:
  91:Core/Src/main.c ****   }
 247              		.loc 1 91 5 discriminator 1 view .LVU53
 248 0022 4FF47A70 		mov	r0, #1000
 249 0026 FFF7FEFF 		bl	vTaskDelay
 250              	.LVL12:
  85:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 251              		.loc 1 85 3 view .LVU54
 252 002a EAE7     		b	.L8
 253              	.L11:
 254              		.align	2
 255              	.L10:
 256 002c 000C0240 		.word	1073875968
 257 0030 00000000 		.word	buffer
 258 0034 0000F03F 		.word	1072693248
 259 0038 00000000 		.word	.LC0
 260 003c 00000000 		.word	huart3
 261              		.cfi_endproc
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 15


 262              	.LFE289:
 264              		.section	.text.Error_Handler,"ax",%progbits
 265              		.align	1
 266              		.global	Error_Handler
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	Error_Handler:
 272              	.LFB300:
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** /* USER CODE END 4 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** /**
 528:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 529:Core/Src/main.c ****   * @retval None
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c **** void Error_Handler(void)
 532:Core/Src/main.c **** {
 273              		.loc 1 532 1 view -0
 274              		.cfi_startproc
 275              		@ Volatile: function does not return.
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 533:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 534:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 535:Core/Src/main.c ****   __disable_irq();
 279              		.loc 1 535 3 view .LVU56
 280              	.LBB8:
 281              	.LBI8:
 282              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 16


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 17


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 18


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 19


 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 20


 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 21


 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 22


 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 23


 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 24


 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 25


 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 26


 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 27


 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 28


 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 29


 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 30


 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 31


 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 32


 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 283              		.loc 2 960 27 view .LVU57
 284              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 285              		.loc 2 962 3 view .LVU58
 286              		.syntax unified
 287              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 288 0000 72B6     		cpsid i
 289              	@ 0 "" 2
 290              		.thumb
 291              		.syntax unified
 292              	.L13:
 293              	.LBE9:
 294              	.LBE8:
 536:Core/Src/main.c ****   while (1)
 295              		.loc 1 536 3 view .LVU59
 537:Core/Src/main.c ****   {
 538:Core/Src/main.c ****   }
 296              		.loc 1 538 3 view .LVU60
 536:Core/Src/main.c ****   while (1)
 297              		.loc 1 536 9 view .LVU61
 298 0002 FEE7     		b	.L13
 299              		.cfi_endproc
 300              	.LFE300:
 302              		.section	.text.MX_TIM2_Init,"ax",%progbits
 303              		.align	1
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	MX_TIM2_Init:
 309              	.LFB293:
 258:Core/Src/main.c **** 
 310              		.loc 1 258 1 view -0
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 33


 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 48
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 10B5     		push	{r4, lr}
 315              	.LCFI5:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 319 0002 8CB0     		sub	sp, sp, #48
 320              	.LCFI6:
 321              		.cfi_def_cfa_offset 56
 264:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 322              		.loc 1 264 3 view .LVU63
 264:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 323              		.loc 1 264 27 is_stmt 0 view .LVU64
 324 0004 03AC     		add	r4, sp, #12
 325 0006 2422     		movs	r2, #36
 326 0008 0021     		movs	r1, #0
 327 000a 2046     		mov	r0, r4
 328 000c FFF7FEFF 		bl	memset
 329              	.LVL13:
 265:Core/Src/main.c **** 
 330              		.loc 1 265 3 is_stmt 1 view .LVU65
 265:Core/Src/main.c **** 
 331              		.loc 1 265 27 is_stmt 0 view .LVU66
 332 0010 0023     		movs	r3, #0
 333 0012 0193     		str	r3, [sp, #4]
 334 0014 0293     		str	r3, [sp, #8]
 270:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 335              		.loc 1 270 3 is_stmt 1 view .LVU67
 270:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 336              		.loc 1 270 18 is_stmt 0 view .LVU68
 337 0016 1348     		ldr	r0, .L20
 338 0018 4FF08042 		mov	r2, #1073741824
 339 001c 0260     		str	r2, [r0]
 271:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 340              		.loc 1 271 3 is_stmt 1 view .LVU69
 271:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 341              		.loc 1 271 24 is_stmt 0 view .LVU70
 342 001e 4360     		str	r3, [r0, #4]
 272:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 343              		.loc 1 272 3 is_stmt 1 view .LVU71
 272:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 344              		.loc 1 272 26 is_stmt 0 view .LVU72
 345 0020 8360     		str	r3, [r0, #8]
 273:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 346              		.loc 1 273 3 is_stmt 1 view .LVU73
 273:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 347              		.loc 1 273 21 is_stmt 0 view .LVU74
 348 0022 4FF0FF32 		mov	r2, #-1
 349 0026 C260     		str	r2, [r0, #12]
 274:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 350              		.loc 1 274 3 is_stmt 1 view .LVU75
 274:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 351              		.loc 1 274 28 is_stmt 0 view .LVU76
 352 0028 0361     		str	r3, [r0, #16]
 275:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 34


 353              		.loc 1 275 3 is_stmt 1 view .LVU77
 275:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 354              		.loc 1 275 32 is_stmt 0 view .LVU78
 355 002a 8023     		movs	r3, #128
 356 002c 8361     		str	r3, [r0, #24]
 276:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 357              		.loc 1 276 3 is_stmt 1 view .LVU79
 276:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 358              		.loc 1 276 23 is_stmt 0 view .LVU80
 359 002e 0323     		movs	r3, #3
 360 0030 0393     		str	r3, [sp, #12]
 277:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 361              		.loc 1 277 3 is_stmt 1 view .LVU81
 277:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 362              		.loc 1 277 23 is_stmt 0 view .LVU82
 363 0032 0222     		movs	r2, #2
 364 0034 0492     		str	r2, [sp, #16]
 278:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 365              		.loc 1 278 3 is_stmt 1 view .LVU83
 278:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 366              		.loc 1 278 24 is_stmt 0 view .LVU84
 367 0036 0123     		movs	r3, #1
 368 0038 0593     		str	r3, [sp, #20]
 279:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 369              		.loc 1 279 3 is_stmt 1 view .LVU85
 280:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 370              		.loc 1 280 3 view .LVU86
 281:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 371              		.loc 1 281 3 view .LVU87
 281:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 372              		.loc 1 281 23 is_stmt 0 view .LVU88
 373 003a 0892     		str	r2, [sp, #32]
 282:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 374              		.loc 1 282 3 is_stmt 1 view .LVU89
 282:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 375              		.loc 1 282 24 is_stmt 0 view .LVU90
 376 003c 0993     		str	r3, [sp, #36]
 283:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 377              		.loc 1 283 3 is_stmt 1 view .LVU91
 284:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 378              		.loc 1 284 3 view .LVU92
 285:Core/Src/main.c ****   {
 379              		.loc 1 285 3 view .LVU93
 285:Core/Src/main.c ****   {
 380              		.loc 1 285 7 is_stmt 0 view .LVU94
 381 003e 2146     		mov	r1, r4
 382 0040 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 383              	.LVL14:
 285:Core/Src/main.c ****   {
 384              		.loc 1 285 6 discriminator 1 view .LVU95
 385 0044 48B9     		cbnz	r0, .L18
 289:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 386              		.loc 1 289 3 is_stmt 1 view .LVU96
 289:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 387              		.loc 1 289 37 is_stmt 0 view .LVU97
 388 0046 0023     		movs	r3, #0
 389 0048 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 35


 290:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 390              		.loc 1 290 3 is_stmt 1 view .LVU98
 290:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 391              		.loc 1 290 33 is_stmt 0 view .LVU99
 392 004a 0293     		str	r3, [sp, #8]
 291:Core/Src/main.c ****   {
 393              		.loc 1 291 3 is_stmt 1 view .LVU100
 291:Core/Src/main.c ****   {
 394              		.loc 1 291 7 is_stmt 0 view .LVU101
 395 004c 01A9     		add	r1, sp, #4
 396 004e 0548     		ldr	r0, .L20
 397 0050 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 398              	.LVL15:
 291:Core/Src/main.c ****   {
 399              		.loc 1 291 6 discriminator 1 view .LVU102
 400 0054 18B9     		cbnz	r0, .L19
 299:Core/Src/main.c **** 
 401              		.loc 1 299 1 view .LVU103
 402 0056 0CB0     		add	sp, sp, #48
 403              	.LCFI7:
 404              		.cfi_remember_state
 405              		.cfi_def_cfa_offset 8
 406              		@ sp needed
 407 0058 10BD     		pop	{r4, pc}
 408              	.L18:
 409              	.LCFI8:
 410              		.cfi_restore_state
 287:Core/Src/main.c ****   }
 411              		.loc 1 287 5 is_stmt 1 view .LVU104
 412 005a FFF7FEFF 		bl	Error_Handler
 413              	.LVL16:
 414              	.L19:
 293:Core/Src/main.c ****   }
 415              		.loc 1 293 5 view .LVU105
 416 005e FFF7FEFF 		bl	Error_Handler
 417              	.LVL17:
 418              	.L21:
 419 0062 00BF     		.align	2
 420              	.L20:
 421 0064 00000000 		.word	htim2
 422              		.cfi_endproc
 423              	.LFE293:
 425              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 426              		.align	1
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	MX_USART2_UART_Init:
 432              	.LFB297:
 432:Core/Src/main.c **** 
 433              		.loc 1 432 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437 0000 08B5     		push	{r3, lr}
 438              	.LCFI9:
 439              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 36


 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 441:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 442              		.loc 1 441 3 view .LVU107
 441:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 443              		.loc 1 441 19 is_stmt 0 view .LVU108
 444 0002 0A48     		ldr	r0, .L26
 445 0004 0A4B     		ldr	r3, .L26+4
 446 0006 0360     		str	r3, [r0]
 442:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 447              		.loc 1 442 3 is_stmt 1 view .LVU109
 442:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 448              		.loc 1 442 24 is_stmt 0 view .LVU110
 449 0008 4FF4E133 		mov	r3, #115200
 450 000c 4360     		str	r3, [r0, #4]
 443:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 451              		.loc 1 443 3 is_stmt 1 view .LVU111
 443:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 452              		.loc 1 443 26 is_stmt 0 view .LVU112
 453 000e 0023     		movs	r3, #0
 454 0010 8360     		str	r3, [r0, #8]
 444:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 455              		.loc 1 444 3 is_stmt 1 view .LVU113
 444:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 456              		.loc 1 444 24 is_stmt 0 view .LVU114
 457 0012 C360     		str	r3, [r0, #12]
 445:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 458              		.loc 1 445 3 is_stmt 1 view .LVU115
 445:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 459              		.loc 1 445 22 is_stmt 0 view .LVU116
 460 0014 0361     		str	r3, [r0, #16]
 446:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 461              		.loc 1 446 3 is_stmt 1 view .LVU117
 446:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 462              		.loc 1 446 20 is_stmt 0 view .LVU118
 463 0016 0C22     		movs	r2, #12
 464 0018 4261     		str	r2, [r0, #20]
 447:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 465              		.loc 1 447 3 is_stmt 1 view .LVU119
 447:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 466              		.loc 1 447 25 is_stmt 0 view .LVU120
 467 001a 8361     		str	r3, [r0, #24]
 448:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 468              		.loc 1 448 3 is_stmt 1 view .LVU121
 448:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 469              		.loc 1 448 28 is_stmt 0 view .LVU122
 470 001c C361     		str	r3, [r0, #28]
 449:Core/Src/main.c ****   {
 471              		.loc 1 449 3 is_stmt 1 view .LVU123
 449:Core/Src/main.c ****   {
 472              		.loc 1 449 7 is_stmt 0 view .LVU124
 473 001e FFF7FEFF 		bl	HAL_UART_Init
 474              	.LVL18:
 449:Core/Src/main.c ****   {
 475              		.loc 1 449 6 discriminator 1 view .LVU125
 476 0022 00B9     		cbnz	r0, .L25
 457:Core/Src/main.c **** 
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 37


 477              		.loc 1 457 1 view .LVU126
 478 0024 08BD     		pop	{r3, pc}
 479              	.L25:
 451:Core/Src/main.c ****   }
 480              		.loc 1 451 5 is_stmt 1 view .LVU127
 481 0026 FFF7FEFF 		bl	Error_Handler
 482              	.LVL19:
 483              	.L27:
 484 002a 00BF     		.align	2
 485              	.L26:
 486 002c 00000000 		.word	huart2
 487 0030 00440040 		.word	1073759232
 488              		.cfi_endproc
 489              	.LFE297:
 491              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 492              		.align	1
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	MX_USART3_UART_Init:
 498              	.LFB298:
 465:Core/Src/main.c **** 
 499              		.loc 1 465 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 08B5     		push	{r3, lr}
 504              	.LCFI10:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 3, -8
 507              		.cfi_offset 14, -4
 474:Core/Src/main.c ****   huart3.Init.BaudRate = 576000;
 508              		.loc 1 474 3 view .LVU129
 474:Core/Src/main.c ****   huart3.Init.BaudRate = 576000;
 509              		.loc 1 474 19 is_stmt 0 view .LVU130
 510 0002 0948     		ldr	r0, .L32
 511 0004 094B     		ldr	r3, .L32+4
 512 0006 0360     		str	r3, [r0]
 475:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 513              		.loc 1 475 3 is_stmt 1 view .LVU131
 475:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 514              		.loc 1 475 24 is_stmt 0 view .LVU132
 515 0008 094B     		ldr	r3, .L32+8
 516 000a 4360     		str	r3, [r0, #4]
 476:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 517              		.loc 1 476 3 is_stmt 1 view .LVU133
 476:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 518              		.loc 1 476 26 is_stmt 0 view .LVU134
 519 000c 0023     		movs	r3, #0
 520 000e 8360     		str	r3, [r0, #8]
 477:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 521              		.loc 1 477 3 is_stmt 1 view .LVU135
 477:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 522              		.loc 1 477 24 is_stmt 0 view .LVU136
 523 0010 C360     		str	r3, [r0, #12]
 478:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 524              		.loc 1 478 3 is_stmt 1 view .LVU137
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 38


 478:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 525              		.loc 1 478 22 is_stmt 0 view .LVU138
 526 0012 0361     		str	r3, [r0, #16]
 479:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 527              		.loc 1 479 3 is_stmt 1 view .LVU139
 479:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 528              		.loc 1 479 20 is_stmt 0 view .LVU140
 529 0014 0C22     		movs	r2, #12
 530 0016 4261     		str	r2, [r0, #20]
 480:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 531              		.loc 1 480 3 is_stmt 1 view .LVU141
 480:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 532              		.loc 1 480 25 is_stmt 0 view .LVU142
 533 0018 8361     		str	r3, [r0, #24]
 481:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 534              		.loc 1 481 3 is_stmt 1 view .LVU143
 481:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 535              		.loc 1 481 28 is_stmt 0 view .LVU144
 536 001a C361     		str	r3, [r0, #28]
 482:Core/Src/main.c ****   {
 537              		.loc 1 482 3 is_stmt 1 view .LVU145
 482:Core/Src/main.c ****   {
 538              		.loc 1 482 7 is_stmt 0 view .LVU146
 539 001c FFF7FEFF 		bl	HAL_UART_Init
 540              	.LVL20:
 482:Core/Src/main.c ****   {
 541              		.loc 1 482 6 discriminator 1 view .LVU147
 542 0020 00B9     		cbnz	r0, .L31
 490:Core/Src/main.c **** 
 543              		.loc 1 490 1 view .LVU148
 544 0022 08BD     		pop	{r3, pc}
 545              	.L31:
 484:Core/Src/main.c ****   }
 546              		.loc 1 484 5 is_stmt 1 view .LVU149
 547 0024 FFF7FEFF 		bl	Error_Handler
 548              	.LVL21:
 549              	.L33:
 550              		.align	2
 551              	.L32:
 552 0028 00000000 		.word	huart3
 553 002c 00480040 		.word	1073760256
 554 0030 00CA0800 		.word	576000
 555              		.cfi_endproc
 556              	.LFE298:
 558              		.section	.text.MX_TIM6_Init,"ax",%progbits
 559              		.align	1
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	MX_TIM6_Init:
 565              	.LFB295:
 356:Core/Src/main.c **** 
 566              		.loc 1 356 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570 0000 00B5     		push	{lr}
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 39


 571              	.LCFI11:
 572              		.cfi_def_cfa_offset 4
 573              		.cfi_offset 14, -4
 574 0002 83B0     		sub	sp, sp, #12
 575              	.LCFI12:
 576              		.cfi_def_cfa_offset 16
 362:Core/Src/main.c **** 
 577              		.loc 1 362 3 view .LVU151
 362:Core/Src/main.c **** 
 578              		.loc 1 362 27 is_stmt 0 view .LVU152
 579 0004 0023     		movs	r3, #0
 580 0006 0093     		str	r3, [sp]
 581 0008 0193     		str	r3, [sp, #4]
 367:Core/Src/main.c ****   htim6.Init.Prescaler = 839;
 582              		.loc 1 367 3 is_stmt 1 view .LVU153
 367:Core/Src/main.c ****   htim6.Init.Prescaler = 839;
 583              		.loc 1 367 18 is_stmt 0 view .LVU154
 584 000a 0F48     		ldr	r0, .L40
 585 000c 0F4A     		ldr	r2, .L40+4
 586 000e 0260     		str	r2, [r0]
 368:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 587              		.loc 1 368 3 is_stmt 1 view .LVU155
 368:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 588              		.loc 1 368 24 is_stmt 0 view .LVU156
 589 0010 40F24732 		movw	r2, #839
 590 0014 4260     		str	r2, [r0, #4]
 369:Core/Src/main.c ****   htim6.Init.Period = 999;
 591              		.loc 1 369 3 is_stmt 1 view .LVU157
 369:Core/Src/main.c ****   htim6.Init.Period = 999;
 592              		.loc 1 369 26 is_stmt 0 view .LVU158
 593 0016 8360     		str	r3, [r0, #8]
 370:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 594              		.loc 1 370 3 is_stmt 1 view .LVU159
 370:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 595              		.loc 1 370 21 is_stmt 0 view .LVU160
 596 0018 40F2E733 		movw	r3, #999
 597 001c C360     		str	r3, [r0, #12]
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 598              		.loc 1 371 3 is_stmt 1 view .LVU161
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 599              		.loc 1 371 32 is_stmt 0 view .LVU162
 600 001e 8023     		movs	r3, #128
 601 0020 8361     		str	r3, [r0, #24]
 372:Core/Src/main.c ****   {
 602              		.loc 1 372 3 is_stmt 1 view .LVU163
 372:Core/Src/main.c ****   {
 603              		.loc 1 372 7 is_stmt 0 view .LVU164
 604 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 605              	.LVL22:
 372:Core/Src/main.c ****   {
 606              		.loc 1 372 6 discriminator 1 view .LVU165
 607 0026 50B9     		cbnz	r0, .L38
 376:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 608              		.loc 1 376 3 is_stmt 1 view .LVU166
 376:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 609              		.loc 1 376 37 is_stmt 0 view .LVU167
 610 0028 0023     		movs	r3, #0
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 40


 611 002a 0093     		str	r3, [sp]
 377:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 612              		.loc 1 377 3 is_stmt 1 view .LVU168
 377:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 613              		.loc 1 377 33 is_stmt 0 view .LVU169
 614 002c 0193     		str	r3, [sp, #4]
 378:Core/Src/main.c ****   {
 615              		.loc 1 378 3 is_stmt 1 view .LVU170
 378:Core/Src/main.c ****   {
 616              		.loc 1 378 7 is_stmt 0 view .LVU171
 617 002e 6946     		mov	r1, sp
 618 0030 0548     		ldr	r0, .L40
 619 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 620              	.LVL23:
 378:Core/Src/main.c ****   {
 621              		.loc 1 378 6 discriminator 1 view .LVU172
 622 0036 20B9     		cbnz	r0, .L39
 386:Core/Src/main.c **** 
 623              		.loc 1 386 1 view .LVU173
 624 0038 03B0     		add	sp, sp, #12
 625              	.LCFI13:
 626              		.cfi_remember_state
 627              		.cfi_def_cfa_offset 4
 628              		@ sp needed
 629 003a 5DF804FB 		ldr	pc, [sp], #4
 630              	.L38:
 631              	.LCFI14:
 632              		.cfi_restore_state
 374:Core/Src/main.c ****   }
 633              		.loc 1 374 5 is_stmt 1 view .LVU174
 634 003e FFF7FEFF 		bl	Error_Handler
 635              	.LVL24:
 636              	.L39:
 380:Core/Src/main.c ****   }
 637              		.loc 1 380 5 view .LVU175
 638 0042 FFF7FEFF 		bl	Error_Handler
 639              	.LVL25:
 640              	.L41:
 641 0046 00BF     		.align	2
 642              	.L40:
 643 0048 00000000 		.word	htim6
 644 004c 00100040 		.word	1073745920
 645              		.cfi_endproc
 646              	.LFE295:
 648              		.section	.text.MX_TIM7_Init,"ax",%progbits
 649              		.align	1
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	MX_TIM7_Init:
 655              	.LFB296:
 394:Core/Src/main.c **** 
 656              		.loc 1 394 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 8
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660 0000 00B5     		push	{lr}
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 41


 661              	.LCFI15:
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 14, -4
 664 0002 83B0     		sub	sp, sp, #12
 665              	.LCFI16:
 666              		.cfi_def_cfa_offset 16
 400:Core/Src/main.c **** 
 667              		.loc 1 400 3 view .LVU177
 400:Core/Src/main.c **** 
 668              		.loc 1 400 27 is_stmt 0 view .LVU178
 669 0004 0023     		movs	r3, #0
 670 0006 0093     		str	r3, [sp]
 671 0008 0193     		str	r3, [sp, #4]
 405:Core/Src/main.c ****   htim7.Init.Prescaler = 83;
 672              		.loc 1 405 3 is_stmt 1 view .LVU179
 405:Core/Src/main.c ****   htim7.Init.Prescaler = 83;
 673              		.loc 1 405 18 is_stmt 0 view .LVU180
 674 000a 0E48     		ldr	r0, .L48
 675 000c 0E4A     		ldr	r2, .L48+4
 676 000e 0260     		str	r2, [r0]
 406:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 677              		.loc 1 406 3 is_stmt 1 view .LVU181
 406:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 678              		.loc 1 406 24 is_stmt 0 view .LVU182
 679 0010 5322     		movs	r2, #83
 680 0012 4260     		str	r2, [r0, #4]
 407:Core/Src/main.c ****   htim7.Init.Period = 999;
 681              		.loc 1 407 3 is_stmt 1 view .LVU183
 407:Core/Src/main.c ****   htim7.Init.Period = 999;
 682              		.loc 1 407 26 is_stmt 0 view .LVU184
 683 0014 8360     		str	r3, [r0, #8]
 408:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 684              		.loc 1 408 3 is_stmt 1 view .LVU185
 408:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 685              		.loc 1 408 21 is_stmt 0 view .LVU186
 686 0016 40F2E733 		movw	r3, #999
 687 001a C360     		str	r3, [r0, #12]
 409:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 688              		.loc 1 409 3 is_stmt 1 view .LVU187
 409:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 689              		.loc 1 409 32 is_stmt 0 view .LVU188
 690 001c 8023     		movs	r3, #128
 691 001e 8361     		str	r3, [r0, #24]
 410:Core/Src/main.c ****   {
 692              		.loc 1 410 3 is_stmt 1 view .LVU189
 410:Core/Src/main.c ****   {
 693              		.loc 1 410 7 is_stmt 0 view .LVU190
 694 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 695              	.LVL26:
 410:Core/Src/main.c ****   {
 696              		.loc 1 410 6 discriminator 1 view .LVU191
 697 0024 50B9     		cbnz	r0, .L46
 414:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 698              		.loc 1 414 3 is_stmt 1 view .LVU192
 414:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 699              		.loc 1 414 37 is_stmt 0 view .LVU193
 700 0026 0023     		movs	r3, #0
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 42


 701 0028 0093     		str	r3, [sp]
 415:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 702              		.loc 1 415 3 is_stmt 1 view .LVU194
 415:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 703              		.loc 1 415 33 is_stmt 0 view .LVU195
 704 002a 0193     		str	r3, [sp, #4]
 416:Core/Src/main.c ****   {
 705              		.loc 1 416 3 is_stmt 1 view .LVU196
 416:Core/Src/main.c ****   {
 706              		.loc 1 416 7 is_stmt 0 view .LVU197
 707 002c 6946     		mov	r1, sp
 708 002e 0548     		ldr	r0, .L48
 709 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 710              	.LVL27:
 416:Core/Src/main.c ****   {
 711              		.loc 1 416 6 discriminator 1 view .LVU198
 712 0034 20B9     		cbnz	r0, .L47
 424:Core/Src/main.c **** 
 713              		.loc 1 424 1 view .LVU199
 714 0036 03B0     		add	sp, sp, #12
 715              	.LCFI17:
 716              		.cfi_remember_state
 717              		.cfi_def_cfa_offset 4
 718              		@ sp needed
 719 0038 5DF804FB 		ldr	pc, [sp], #4
 720              	.L46:
 721              	.LCFI18:
 722              		.cfi_restore_state
 412:Core/Src/main.c ****   }
 723              		.loc 1 412 5 is_stmt 1 view .LVU200
 724 003c FFF7FEFF 		bl	Error_Handler
 725              	.LVL28:
 726              	.L47:
 418:Core/Src/main.c ****   }
 727              		.loc 1 418 5 view .LVU201
 728 0040 FFF7FEFF 		bl	Error_Handler
 729              	.LVL29:
 730              	.L49:
 731              		.align	2
 732              	.L48:
 733 0044 00000000 		.word	htim7
 734 0048 00140040 		.word	1073746944
 735              		.cfi_endproc
 736              	.LFE296:
 738              		.section	.text.MX_TIM3_Init,"ax",%progbits
 739              		.align	1
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 744              	MX_TIM3_Init:
 745              	.LFB294:
 307:Core/Src/main.c **** 
 746              		.loc 1 307 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 48
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 43


 751              	.LCFI19:
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 4, -8
 754              		.cfi_offset 14, -4
 755 0002 8CB0     		sub	sp, sp, #48
 756              	.LCFI20:
 757              		.cfi_def_cfa_offset 56
 313:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 758              		.loc 1 313 3 view .LVU203
 313:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 759              		.loc 1 313 27 is_stmt 0 view .LVU204
 760 0004 03AC     		add	r4, sp, #12
 761 0006 2422     		movs	r2, #36
 762 0008 0021     		movs	r1, #0
 763 000a 2046     		mov	r0, r4
 764 000c FFF7FEFF 		bl	memset
 765              	.LVL30:
 314:Core/Src/main.c **** 
 766              		.loc 1 314 3 is_stmt 1 view .LVU205
 314:Core/Src/main.c **** 
 767              		.loc 1 314 27 is_stmt 0 view .LVU206
 768 0010 0023     		movs	r3, #0
 769 0012 0193     		str	r3, [sp, #4]
 770 0014 0293     		str	r3, [sp, #8]
 319:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 771              		.loc 1 319 3 is_stmt 1 view .LVU207
 319:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 772              		.loc 1 319 18 is_stmt 0 view .LVU208
 773 0016 1248     		ldr	r0, .L56
 774 0018 124A     		ldr	r2, .L56+4
 775 001a 0260     		str	r2, [r0]
 320:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 776              		.loc 1 320 3 is_stmt 1 view .LVU209
 320:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 777              		.loc 1 320 24 is_stmt 0 view .LVU210
 778 001c 4360     		str	r3, [r0, #4]
 321:Core/Src/main.c ****   htim3.Init.Period = 65535;
 779              		.loc 1 321 3 is_stmt 1 view .LVU211
 321:Core/Src/main.c ****   htim3.Init.Period = 65535;
 780              		.loc 1 321 26 is_stmt 0 view .LVU212
 781 001e 8360     		str	r3, [r0, #8]
 322:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 782              		.loc 1 322 3 is_stmt 1 view .LVU213
 322:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 783              		.loc 1 322 21 is_stmt 0 view .LVU214
 784 0020 4FF6FF72 		movw	r2, #65535
 785 0024 C260     		str	r2, [r0, #12]
 323:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 786              		.loc 1 323 3 is_stmt 1 view .LVU215
 323:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 787              		.loc 1 323 28 is_stmt 0 view .LVU216
 788 0026 0361     		str	r3, [r0, #16]
 324:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 789              		.loc 1 324 3 is_stmt 1 view .LVU217
 324:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 790              		.loc 1 324 32 is_stmt 0 view .LVU218
 791 0028 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 44


 325:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 792              		.loc 1 325 3 is_stmt 1 view .LVU219
 325:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 793              		.loc 1 325 23 is_stmt 0 view .LVU220
 794 002a 0323     		movs	r3, #3
 795 002c 0393     		str	r3, [sp, #12]
 326:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 796              		.loc 1 326 3 is_stmt 1 view .LVU221
 326:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 797              		.loc 1 326 23 is_stmt 0 view .LVU222
 798 002e 0222     		movs	r2, #2
 799 0030 0492     		str	r2, [sp, #16]
 327:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800              		.loc 1 327 3 is_stmt 1 view .LVU223
 327:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 801              		.loc 1 327 24 is_stmt 0 view .LVU224
 802 0032 0123     		movs	r3, #1
 803 0034 0593     		str	r3, [sp, #20]
 328:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 804              		.loc 1 328 3 is_stmt 1 view .LVU225
 329:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 805              		.loc 1 329 3 view .LVU226
 330:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 806              		.loc 1 330 3 view .LVU227
 330:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 807              		.loc 1 330 23 is_stmt 0 view .LVU228
 808 0036 0892     		str	r2, [sp, #32]
 331:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 809              		.loc 1 331 3 is_stmt 1 view .LVU229
 331:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 810              		.loc 1 331 24 is_stmt 0 view .LVU230
 811 0038 0993     		str	r3, [sp, #36]
 332:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 812              		.loc 1 332 3 is_stmt 1 view .LVU231
 333:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 813              		.loc 1 333 3 view .LVU232
 334:Core/Src/main.c ****   {
 814              		.loc 1 334 3 view .LVU233
 334:Core/Src/main.c ****   {
 815              		.loc 1 334 7 is_stmt 0 view .LVU234
 816 003a 2146     		mov	r1, r4
 817 003c FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 818              	.LVL31:
 334:Core/Src/main.c ****   {
 819              		.loc 1 334 6 discriminator 1 view .LVU235
 820 0040 48B9     		cbnz	r0, .L54
 338:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 821              		.loc 1 338 3 is_stmt 1 view .LVU236
 338:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 822              		.loc 1 338 37 is_stmt 0 view .LVU237
 823 0042 0023     		movs	r3, #0
 824 0044 0193     		str	r3, [sp, #4]
 339:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 825              		.loc 1 339 3 is_stmt 1 view .LVU238
 339:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 826              		.loc 1 339 33 is_stmt 0 view .LVU239
 827 0046 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 45


 340:Core/Src/main.c ****   {
 828              		.loc 1 340 3 is_stmt 1 view .LVU240
 340:Core/Src/main.c ****   {
 829              		.loc 1 340 7 is_stmt 0 view .LVU241
 830 0048 01A9     		add	r1, sp, #4
 831 004a 0548     		ldr	r0, .L56
 832 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 833              	.LVL32:
 340:Core/Src/main.c ****   {
 834              		.loc 1 340 6 discriminator 1 view .LVU242
 835 0050 18B9     		cbnz	r0, .L55
 348:Core/Src/main.c **** 
 836              		.loc 1 348 1 view .LVU243
 837 0052 0CB0     		add	sp, sp, #48
 838              	.LCFI21:
 839              		.cfi_remember_state
 840              		.cfi_def_cfa_offset 8
 841              		@ sp needed
 842 0054 10BD     		pop	{r4, pc}
 843              	.L54:
 844              	.LCFI22:
 845              		.cfi_restore_state
 336:Core/Src/main.c ****   }
 846              		.loc 1 336 5 is_stmt 1 view .LVU244
 847 0056 FFF7FEFF 		bl	Error_Handler
 848              	.LVL33:
 849              	.L55:
 342:Core/Src/main.c ****   }
 850              		.loc 1 342 5 view .LVU245
 851 005a FFF7FEFF 		bl	Error_Handler
 852              	.LVL34:
 853              	.L57:
 854 005e 00BF     		.align	2
 855              	.L56:
 856 0060 00000000 		.word	htim3
 857 0064 00040040 		.word	1073742848
 858              		.cfi_endproc
 859              	.LFE294:
 861              		.section	.text.MX_ADC1_Init,"ax",%progbits
 862              		.align	1
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 867              	MX_ADC1_Init:
 868              	.LFB292:
 206:Core/Src/main.c **** 
 869              		.loc 1 206 1 view -0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 16
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873 0000 00B5     		push	{lr}
 874              	.LCFI23:
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 14, -4
 877 0002 85B0     		sub	sp, sp, #20
 878              	.LCFI24:
 879              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 46


 212:Core/Src/main.c **** 
 880              		.loc 1 212 3 view .LVU247
 212:Core/Src/main.c **** 
 881              		.loc 1 212 26 is_stmt 0 view .LVU248
 882 0004 0023     		movs	r3, #0
 883 0006 0093     		str	r3, [sp]
 884 0008 0193     		str	r3, [sp, #4]
 885 000a 0293     		str	r3, [sp, #8]
 886 000c 0393     		str	r3, [sp, #12]
 220:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 887              		.loc 1 220 3 is_stmt 1 view .LVU249
 220:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 888              		.loc 1 220 18 is_stmt 0 view .LVU250
 889 000e 1448     		ldr	r0, .L64
 890 0010 144A     		ldr	r2, .L64+4
 891 0012 0260     		str	r2, [r0]
 221:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 892              		.loc 1 221 3 is_stmt 1 view .LVU251
 221:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 893              		.loc 1 221 29 is_stmt 0 view .LVU252
 894 0014 4FF48032 		mov	r2, #65536
 895 0018 4260     		str	r2, [r0, #4]
 222:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 896              		.loc 1 222 3 is_stmt 1 view .LVU253
 222:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 897              		.loc 1 222 25 is_stmt 0 view .LVU254
 898 001a 8360     		str	r3, [r0, #8]
 223:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 899              		.loc 1 223 3 is_stmt 1 view .LVU255
 223:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 900              		.loc 1 223 27 is_stmt 0 view .LVU256
 901 001c 0361     		str	r3, [r0, #16]
 224:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 902              		.loc 1 224 3 is_stmt 1 view .LVU257
 224:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 903              		.loc 1 224 33 is_stmt 0 view .LVU258
 904 001e 0122     		movs	r2, #1
 905 0020 0276     		strb	r2, [r0, #24]
 225:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 906              		.loc 1 225 3 is_stmt 1 view .LVU259
 225:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 907              		.loc 1 225 36 is_stmt 0 view .LVU260
 908 0022 80F82030 		strb	r3, [r0, #32]
 226:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 909              		.loc 1 226 3 is_stmt 1 view .LVU261
 226:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 910              		.loc 1 226 35 is_stmt 0 view .LVU262
 911 0026 C362     		str	r3, [r0, #44]
 227:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 912              		.loc 1 227 3 is_stmt 1 view .LVU263
 227:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 913              		.loc 1 227 31 is_stmt 0 view .LVU264
 914 0028 0F49     		ldr	r1, .L64+8
 915 002a 8162     		str	r1, [r0, #40]
 228:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 916              		.loc 1 228 3 is_stmt 1 view .LVU265
 228:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 47


 917              		.loc 1 228 24 is_stmt 0 view .LVU266
 918 002c C360     		str	r3, [r0, #12]
 229:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 919              		.loc 1 229 3 is_stmt 1 view .LVU267
 229:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 920              		.loc 1 229 30 is_stmt 0 view .LVU268
 921 002e C261     		str	r2, [r0, #28]
 230:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 922              		.loc 1 230 3 is_stmt 1 view .LVU269
 230:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 923              		.loc 1 230 36 is_stmt 0 view .LVU270
 924 0030 80F83030 		strb	r3, [r0, #48]
 231:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 925              		.loc 1 231 3 is_stmt 1 view .LVU271
 231:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 926              		.loc 1 231 27 is_stmt 0 view .LVU272
 927 0034 4261     		str	r2, [r0, #20]
 232:Core/Src/main.c ****   {
 928              		.loc 1 232 3 is_stmt 1 view .LVU273
 232:Core/Src/main.c ****   {
 929              		.loc 1 232 7 is_stmt 0 view .LVU274
 930 0036 FFF7FEFF 		bl	HAL_ADC_Init
 931              	.LVL35:
 232:Core/Src/main.c ****   {
 932              		.loc 1 232 6 discriminator 1 view .LVU275
 933 003a 68B9     		cbnz	r0, .L62
 239:Core/Src/main.c ****   sConfig.Rank = 1;
 934              		.loc 1 239 3 is_stmt 1 view .LVU276
 239:Core/Src/main.c ****   sConfig.Rank = 1;
 935              		.loc 1 239 19 is_stmt 0 view .LVU277
 936 003c 0523     		movs	r3, #5
 937 003e 0093     		str	r3, [sp]
 240:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 938              		.loc 1 240 3 is_stmt 1 view .LVU278
 240:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 939              		.loc 1 240 16 is_stmt 0 view .LVU279
 940 0040 0123     		movs	r3, #1
 941 0042 0193     		str	r3, [sp, #4]
 241:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 942              		.loc 1 241 3 is_stmt 1 view .LVU280
 241:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 943              		.loc 1 241 24 is_stmt 0 view .LVU281
 944 0044 0723     		movs	r3, #7
 945 0046 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c ****   {
 946              		.loc 1 242 3 is_stmt 1 view .LVU282
 242:Core/Src/main.c ****   {
 947              		.loc 1 242 7 is_stmt 0 view .LVU283
 948 0048 6946     		mov	r1, sp
 949 004a 0548     		ldr	r0, .L64
 950 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 951              	.LVL36:
 242:Core/Src/main.c ****   {
 952              		.loc 1 242 6 discriminator 1 view .LVU284
 953 0050 20B9     		cbnz	r0, .L63
 250:Core/Src/main.c **** 
 954              		.loc 1 250 1 view .LVU285
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 48


 955 0052 05B0     		add	sp, sp, #20
 956              	.LCFI25:
 957              		.cfi_remember_state
 958              		.cfi_def_cfa_offset 4
 959              		@ sp needed
 960 0054 5DF804FB 		ldr	pc, [sp], #4
 961              	.L62:
 962              	.LCFI26:
 963              		.cfi_restore_state
 234:Core/Src/main.c ****   }
 964              		.loc 1 234 5 is_stmt 1 view .LVU286
 965 0058 FFF7FEFF 		bl	Error_Handler
 966              	.LVL37:
 967              	.L63:
 244:Core/Src/main.c ****   }
 968              		.loc 1 244 5 view .LVU287
 969 005c FFF7FEFF 		bl	Error_Handler
 970              	.LVL38:
 971              	.L65:
 972              		.align	2
 973              	.L64:
 974 0060 00000000 		.word	hadc1
 975 0064 00200140 		.word	1073815552
 976 0068 0100000F 		.word	251658241
 977              		.cfi_endproc
 978              	.LFE292:
 980              		.section	.text.SystemClock_Config,"ax",%progbits
 981              		.align	1
 982              		.global	SystemClock_Config
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 987              	SystemClock_Config:
 988              	.LFB291:
 159:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 989              		.loc 1 159 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 80
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993 0000 10B5     		push	{r4, lr}
 994              	.LCFI27:
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 4, -8
 997              		.cfi_offset 14, -4
 998 0002 94B0     		sub	sp, sp, #80
 999              	.LCFI28:
 1000              		.cfi_def_cfa_offset 88
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1001              		.loc 1 160 3 view .LVU289
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1002              		.loc 1 160 22 is_stmt 0 view .LVU290
 1003 0004 08AC     		add	r4, sp, #32
 1004 0006 3022     		movs	r2, #48
 1005 0008 0021     		movs	r1, #0
 1006 000a 2046     		mov	r0, r4
 1007 000c FFF7FEFF 		bl	memset
 1008              	.LVL39:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 49


 161:Core/Src/main.c **** 
 1009              		.loc 1 161 3 is_stmt 1 view .LVU291
 161:Core/Src/main.c **** 
 1010              		.loc 1 161 22 is_stmt 0 view .LVU292
 1011 0010 0023     		movs	r3, #0
 1012 0012 0393     		str	r3, [sp, #12]
 1013 0014 0493     		str	r3, [sp, #16]
 1014 0016 0593     		str	r3, [sp, #20]
 1015 0018 0693     		str	r3, [sp, #24]
 1016 001a 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1017              		.loc 1 165 3 is_stmt 1 view .LVU293
 1018              	.LBB10:
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1019              		.loc 1 165 3 view .LVU294
 1020 001c 0193     		str	r3, [sp, #4]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1021              		.loc 1 165 3 view .LVU295
 1022 001e 1F4A     		ldr	r2, .L72
 1023 0020 116C     		ldr	r1, [r2, #64]
 1024 0022 41F08051 		orr	r1, r1, #268435456
 1025 0026 1164     		str	r1, [r2, #64]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1026              		.loc 1 165 3 view .LVU296
 1027 0028 126C     		ldr	r2, [r2, #64]
 1028 002a 02F08052 		and	r2, r2, #268435456
 1029 002e 0192     		str	r2, [sp, #4]
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1030              		.loc 1 165 3 view .LVU297
 1031 0030 019A     		ldr	r2, [sp, #4]
 1032              	.LBE10:
 165:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1033              		.loc 1 165 3 view .LVU298
 166:Core/Src/main.c **** 
 1034              		.loc 1 166 3 view .LVU299
 1035              	.LBB11:
 166:Core/Src/main.c **** 
 1036              		.loc 1 166 3 view .LVU300
 1037 0032 0293     		str	r3, [sp, #8]
 166:Core/Src/main.c **** 
 1038              		.loc 1 166 3 view .LVU301
 1039 0034 1A4A     		ldr	r2, .L72+4
 1040 0036 1168     		ldr	r1, [r2]
 1041 0038 41F48041 		orr	r1, r1, #16384
 1042 003c 1160     		str	r1, [r2]
 166:Core/Src/main.c **** 
 1043              		.loc 1 166 3 view .LVU302
 1044 003e 1268     		ldr	r2, [r2]
 1045 0040 02F48042 		and	r2, r2, #16384
 1046 0044 0292     		str	r2, [sp, #8]
 166:Core/Src/main.c **** 
 1047              		.loc 1 166 3 view .LVU303
 1048 0046 029A     		ldr	r2, [sp, #8]
 1049              	.LBE11:
 166:Core/Src/main.c **** 
 1050              		.loc 1 166 3 view .LVU304
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 50


 1051              		.loc 1 171 3 view .LVU305
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1052              		.loc 1 171 36 is_stmt 0 view .LVU306
 1053 0048 0222     		movs	r2, #2
 1054 004a 0892     		str	r2, [sp, #32]
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1055              		.loc 1 172 3 is_stmt 1 view .LVU307
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1056              		.loc 1 172 30 is_stmt 0 view .LVU308
 1057 004c 0121     		movs	r1, #1
 1058 004e 0B91     		str	r1, [sp, #44]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1059              		.loc 1 173 3 is_stmt 1 view .LVU309
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1060              		.loc 1 173 41 is_stmt 0 view .LVU310
 1061 0050 1021     		movs	r1, #16
 1062 0052 0C91     		str	r1, [sp, #48]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1063              		.loc 1 174 3 is_stmt 1 view .LVU311
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1064              		.loc 1 174 34 is_stmt 0 view .LVU312
 1065 0054 0E92     		str	r2, [sp, #56]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1066              		.loc 1 175 3 is_stmt 1 view .LVU313
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1067              		.loc 1 175 35 is_stmt 0 view .LVU314
 1068 0056 0F93     		str	r3, [sp, #60]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1069              		.loc 1 176 3 is_stmt 1 view .LVU315
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1070              		.loc 1 176 30 is_stmt 0 view .LVU316
 1071 0058 0823     		movs	r3, #8
 1072 005a 1093     		str	r3, [sp, #64]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1073              		.loc 1 177 3 is_stmt 1 view .LVU317
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1074              		.loc 1 177 30 is_stmt 0 view .LVU318
 1075 005c A823     		movs	r3, #168
 1076 005e 1193     		str	r3, [sp, #68]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1077              		.loc 1 178 3 is_stmt 1 view .LVU319
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1078              		.loc 1 178 30 is_stmt 0 view .LVU320
 1079 0060 1292     		str	r2, [sp, #72]
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1080              		.loc 1 179 3 is_stmt 1 view .LVU321
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1081              		.loc 1 179 30 is_stmt 0 view .LVU322
 1082 0062 0423     		movs	r3, #4
 1083 0064 1393     		str	r3, [sp, #76]
 180:Core/Src/main.c ****   {
 1084              		.loc 1 180 3 is_stmt 1 view .LVU323
 180:Core/Src/main.c ****   {
 1085              		.loc 1 180 7 is_stmt 0 view .LVU324
 1086 0066 2046     		mov	r0, r4
 1087 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1088              	.LVL40:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 51


 180:Core/Src/main.c ****   {
 1089              		.loc 1 180 6 discriminator 1 view .LVU325
 1090 006c 90B9     		cbnz	r0, .L70
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1091              		.loc 1 187 3 is_stmt 1 view .LVU326
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1092              		.loc 1 187 31 is_stmt 0 view .LVU327
 1093 006e 0F23     		movs	r3, #15
 1094 0070 0393     		str	r3, [sp, #12]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1095              		.loc 1 189 3 is_stmt 1 view .LVU328
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1096              		.loc 1 189 34 is_stmt 0 view .LVU329
 1097 0072 0223     		movs	r3, #2
 1098 0074 0493     		str	r3, [sp, #16]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1099              		.loc 1 190 3 is_stmt 1 view .LVU330
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1100              		.loc 1 190 35 is_stmt 0 view .LVU331
 1101 0076 0023     		movs	r3, #0
 1102 0078 0593     		str	r3, [sp, #20]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1103              		.loc 1 191 3 is_stmt 1 view .LVU332
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1104              		.loc 1 191 36 is_stmt 0 view .LVU333
 1105 007a 4FF4A053 		mov	r3, #5120
 1106 007e 0693     		str	r3, [sp, #24]
 192:Core/Src/main.c **** 
 1107              		.loc 1 192 3 is_stmt 1 view .LVU334
 192:Core/Src/main.c **** 
 1108              		.loc 1 192 36 is_stmt 0 view .LVU335
 1109 0080 4FF48053 		mov	r3, #4096
 1110 0084 0793     		str	r3, [sp, #28]
 194:Core/Src/main.c ****   {
 1111              		.loc 1 194 3 is_stmt 1 view .LVU336
 194:Core/Src/main.c ****   {
 1112              		.loc 1 194 7 is_stmt 0 view .LVU337
 1113 0086 0521     		movs	r1, #5
 1114 0088 03A8     		add	r0, sp, #12
 1115 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1116              	.LVL41:
 194:Core/Src/main.c ****   {
 1117              		.loc 1 194 6 discriminator 1 view .LVU338
 1118 008e 18B9     		cbnz	r0, .L71
 198:Core/Src/main.c **** 
 1119              		.loc 1 198 1 view .LVU339
 1120 0090 14B0     		add	sp, sp, #80
 1121              	.LCFI29:
 1122              		.cfi_remember_state
 1123              		.cfi_def_cfa_offset 8
 1124              		@ sp needed
 1125 0092 10BD     		pop	{r4, pc}
 1126              	.L70:
 1127              	.LCFI30:
 1128              		.cfi_restore_state
 182:Core/Src/main.c ****   }
 1129              		.loc 1 182 5 is_stmt 1 view .LVU340
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 52


 1130 0094 FFF7FEFF 		bl	Error_Handler
 1131              	.LVL42:
 1132              	.L71:
 196:Core/Src/main.c ****   }
 1133              		.loc 1 196 5 view .LVU341
 1134 0098 FFF7FEFF 		bl	Error_Handler
 1135              	.LVL43:
 1136              	.L73:
 1137              		.align	2
 1138              	.L72:
 1139 009c 00380240 		.word	1073887232
 1140 00a0 00700040 		.word	1073770496
 1141              		.cfi_endproc
 1142              	.LFE291:
 1144              		.section	.text.main,"ax",%progbits
 1145              		.align	1
 1146              		.global	main
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1151              	main:
 1152              	.LFB290:
 101:Core/Src/main.c **** 
 1153              		.loc 1 101 1 view -0
 1154              		.cfi_startproc
 1155              		@ Volatile: function does not return.
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158 0000 00B5     		push	{lr}
 1159              	.LCFI31:
 1160              		.cfi_def_cfa_offset 4
 1161              		.cfi_offset 14, -4
 1162 0002 83B0     		sub	sp, sp, #12
 1163              	.LCFI32:
 1164              		.cfi_def_cfa_offset 16
 110:Core/Src/main.c **** 
 1165              		.loc 1 110 3 view .LVU343
 1166 0004 FFF7FEFF 		bl	HAL_Init
 1167              	.LVL44:
 117:Core/Src/main.c **** 
 1168              		.loc 1 117 3 view .LVU344
 1169 0008 FFF7FEFF 		bl	SystemClock_Config
 1170              	.LVL45:
 124:Core/Src/main.c ****   MX_TIM2_Init();
 1171              		.loc 1 124 3 view .LVU345
 1172 000c FFF7FEFF 		bl	MX_GPIO_Init
 1173              	.LVL46:
 125:Core/Src/main.c ****   MX_USART2_UART_Init();
 1174              		.loc 1 125 3 view .LVU346
 1175 0010 FFF7FEFF 		bl	MX_TIM2_Init
 1176              	.LVL47:
 126:Core/Src/main.c ****   MX_USART3_UART_Init();
 1177              		.loc 1 126 3 view .LVU347
 1178 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1179              	.LVL48:
 127:Core/Src/main.c ****   MX_TIM6_Init();
 1180              		.loc 1 127 3 view .LVU348
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 53


 1181 0018 FFF7FEFF 		bl	MX_USART3_UART_Init
 1182              	.LVL49:
 128:Core/Src/main.c ****   MX_TIM7_Init();
 1183              		.loc 1 128 3 view .LVU349
 1184 001c FFF7FEFF 		bl	MX_TIM6_Init
 1185              	.LVL50:
 129:Core/Src/main.c ****   MX_TIM3_Init();
 1186              		.loc 1 129 3 view .LVU350
 1187 0020 FFF7FEFF 		bl	MX_TIM7_Init
 1188              	.LVL51:
 130:Core/Src/main.c ****   MX_ADC1_Init();
 1189              		.loc 1 130 3 view .LVU351
 1190 0024 FFF7FEFF 		bl	MX_TIM3_Init
 1191              	.LVL52:
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1192              		.loc 1 131 3 view .LVU352
 1193 0028 FFF7FEFF 		bl	MX_ADC1_Init
 1194              	.LVL53:
 134:Core/Src/main.c ****   
 1195              		.loc 1 134 3 view .LVU353
 134:Core/Src/main.c ****   
 1196              		.loc 1 134 13 is_stmt 0 view .LVU354
 1197 002c 9FED090A 		vldr.32	s0, .L77
 1198 0030 FFF7FEFF 		bl	arm_sin_f32
 1199              	.LVL54:
 134:Core/Src/main.c ****   
 1200              		.loc 1 134 11 discriminator 1 view .LVU355
 1201 0034 084B     		ldr	r3, .L77+4
 1202 0036 83ED000A 		vstr.32	s0, [r3]
 136:Core/Src/main.c **** 
 1203              		.loc 1 136 3 is_stmt 1 view .LVU356
 1204 003a 0021     		movs	r1, #0
 1205 003c 0191     		str	r1, [sp, #4]
 1206 003e 0123     		movs	r3, #1
 1207 0040 0093     		str	r3, [sp]
 1208 0042 0B46     		mov	r3, r1
 1209 0044 8222     		movs	r2, #130
 1210 0046 0548     		ldr	r0, .L77+8
 1211 0048 FFF7FEFF 		bl	xTaskCreate
 1212              	.LVL55:
 138:Core/Src/main.c **** 
 1213              		.loc 1 138 3 view .LVU357
 1214 004c FFF7FEFF 		bl	vTaskStartScheduler
 1215              	.LVL56:
 1216              	.L75:
 144:Core/Src/main.c ****   {
 1217              		.loc 1 144 3 view .LVU358
 150:Core/Src/main.c ****   /* USER CODE END 3 */
 1218              		.loc 1 150 3 view .LVU359
 144:Core/Src/main.c ****   {
 1219              		.loc 1 144 9 view .LVU360
 1220 0050 FEE7     		b	.L75
 1221              	.L78:
 1222 0052 00BF     		.align	2
 1223              	.L77:
 1224 0054 DB0FC93F 		.word	1070141403
 1225 0058 00000000 		.word	testSin
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 54


 1226 005c 00000000 		.word	mainTask
 1227              		.cfi_endproc
 1228              	.LFE290:
 1230              		.global	buffer
 1231              		.section	.bss.buffer,"aw",%nobits
 1232              		.align	2
 1235              	buffer:
 1236 0000 00000000 		.space	20
 1236      00000000 
 1236      00000000 
 1236      00000000 
 1236      00000000 
 1237              		.global	testSin
 1238              		.section	.bss.testSin,"aw",%nobits
 1239              		.align	2
 1242              	testSin:
 1243 0000 00000000 		.space	4
 1244              		.global	huart3
 1245              		.section	.bss.huart3,"aw",%nobits
 1246              		.align	2
 1249              	huart3:
 1250 0000 00000000 		.space	72
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1251              		.global	huart2
 1252              		.section	.bss.huart2,"aw",%nobits
 1253              		.align	2
 1256              	huart2:
 1257 0000 00000000 		.space	72
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1258              		.global	htim7
 1259              		.section	.bss.htim7,"aw",%nobits
 1260              		.align	2
 1263              	htim7:
 1264 0000 00000000 		.space	72
 1264      00000000 
 1264      00000000 
 1264      00000000 
 1264      00000000 
 1265              		.global	htim6
 1266              		.section	.bss.htim6,"aw",%nobits
 1267              		.align	2
 1270              	htim6:
 1271 0000 00000000 		.space	72
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1272              		.global	htim3
 1273              		.section	.bss.htim3,"aw",%nobits
 1274              		.align	2
 1277              	htim3:
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 55


 1278 0000 00000000 		.space	72
 1278      00000000 
 1278      00000000 
 1278      00000000 
 1278      00000000 
 1279              		.global	htim2
 1280              		.section	.bss.htim2,"aw",%nobits
 1281              		.align	2
 1284              	htim2:
 1285 0000 00000000 		.space	72
 1285      00000000 
 1285      00000000 
 1285      00000000 
 1285      00000000 
 1286              		.global	hadc1
 1287              		.section	.bss.hadc1,"aw",%nobits
 1288              		.align	2
 1291              	hadc1:
 1292 0000 00000000 		.space	72
 1292      00000000 
 1292      00000000 
 1292      00000000 
 1292      00000000 
 1293              		.text
 1294              	.Letext0:
 1295              		.file 3 "D:/InvertedPendulum/Tool/ArmGnuToolchain/arm-none-eabi/include/machine/_default_types.h"
 1296              		.file 4 "D:/InvertedPendulum/Tool/ArmGnuToolchain/arm-none-eabi/include/sys/_stdint.h"
 1297              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1298              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1299              		.file 7 "D:/InvertedPendulum/Tool/ArmGnuToolchain/lib/gcc/arm-none-eabi/14.2.1/include/stddef.h"
 1300              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1301              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1302              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1303              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1304              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1305              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1306              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1307              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1308              		.file 16 "Middlewares/Third_Party/ARM/FreeRTOS/include/projdefs.h"
 1309              		.file 17 "Middlewares/Third_Party/ARM/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 1310              		.file 18 "Middlewares/Third_Party/ARM/FreeRTOS/include/task.h"
 1311              		.file 19 "Middlewares/ST/ARM/DSP/Inc/arm_math.h"
 1312              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1313              		.file 21 "Core/Inc/printf.h"
 1314              		.file 22 "D:/InvertedPendulum/Tool/ArmGnuToolchain/arm-none-eabi/include/string.h"
 1315              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1316              		.file 24 "<built-in>"
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:151    .text.MX_GPIO_Init:0000008c $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:157    .text.SendBuffer:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:163    .text.SendBuffer:00000000 SendBuffer
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:202    .rodata.mainTask.str1.4:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:206    .text.mainTask:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:212    .text.mainTask:00000000 mainTask
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:256    .text.mainTask:0000002c $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1235   .bss.buffer:00000000 buffer
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1249   .bss.huart3:00000000 huart3
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:265    .text.Error_Handler:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:271    .text.Error_Handler:00000000 Error_Handler
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:303    .text.MX_TIM2_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:308    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:421    .text.MX_TIM2_Init:00000064 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1284   .bss.htim2:00000000 htim2
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:426    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:431    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:486    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1256   .bss.huart2:00000000 huart2
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:492    .text.MX_USART3_UART_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:497    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:552    .text.MX_USART3_UART_Init:00000028 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:559    .text.MX_TIM6_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:564    .text.MX_TIM6_Init:00000000 MX_TIM6_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:643    .text.MX_TIM6_Init:00000048 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1270   .bss.htim6:00000000 htim6
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:649    .text.MX_TIM7_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:654    .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:733    .text.MX_TIM7_Init:00000044 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1263   .bss.htim7:00000000 htim7
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:739    .text.MX_TIM3_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:744    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:856    .text.MX_TIM3_Init:00000060 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1277   .bss.htim3:00000000 htim3
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:862    .text.MX_ADC1_Init:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:867    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:974    .text.MX_ADC1_Init:00000060 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1291   .bss.hadc1:00000000 hadc1
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:981    .text.SystemClock_Config:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:987    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1139   .text.SystemClock_Config:0000009c $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1145   .text.main:00000000 $t
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1151   .text.main:00000000 main
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1224   .text.main:00000054 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1242   .bss.testSin:00000000 testSin
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1232   .bss.buffer:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1239   .bss.testSin:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1246   .bss.huart3:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1253   .bss.huart2:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1260   .bss.htim7:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1267   .bss.htim6:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1274   .bss.htim3:00000000 $d
C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1281   .bss.htim2:00000000 $d
ARM GAS  C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s 			page 57


C:\Users\CuongLe\AppData\Local\Temp\ccgs3IlK.s:1288   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
strlen
HAL_UART_Transmit_IT
HAL_GPIO_TogglePin
sprintf_
vTaskDelay
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
HAL_TIM_Base_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
arm_sin_f32
xTaskCreate
vTaskStartScheduler
